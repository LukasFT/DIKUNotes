
==================== FINAL INTERFACE ====================
2018-11-08 19:01:46.624257562 UTC

interface appm-0.0.0-bBoXP3Z3yF8cAWvQVfHOK:ParserImpl 8043
  interface hash: 82321e84179d9ce88ad3da7a5ca50210
  ABI hash: 46bf9931bc64e18a78df069078657eaa
  export-list hash: 151fe2a145a85f23ba8df17739f1565a
  orphan hash: 84cdd8dfb89524be9a0724db45a1d289
  flag hash: 801e261ed9403c627f11a8cca73a8ada
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  ParserImpl.asciiLetters
  ParserImpl.asciiNotQuoteParser
  ParserImpl.boundParser
  ParserImpl.clauseParser
  ParserImpl.cleanUp
  ParserImpl.conflictsParser
  ParserImpl.databaseParser
  ParserImpl.generalPackageNameParser
  ParserImpl.hyphenParser
  ParserImpl.isAlphaNumOrHyphen
  ParserImpl.isValidStringChar
  ParserImpl.keywordParser
  ParserImpl.lettersAndDigitsParser
  ParserImpl.pComments
  ParserImpl.pSpaceComments
  ParserImpl.packageNameParser
  ParserImpl.packageParser
  ParserImpl.parseDatabase
  ParserImpl.parseVersion
  ParserImpl.quoteParser
  ParserImpl.requiredParser
  ParserImpl.simplePackageNameParser
  ParserImpl.singleConstParser
  ParserImpl.singleVNumParser
  ParserImpl.stringContentParser
  ParserImpl.stringParser
  ParserImpl.symbol
  ParserImpl.token
  ParserImpl.versionParser
  ParserImpl.Clause{ParserImpl.CC ParserImpl.DC ParserImpl.Epsilon ParserImpl.NC ParserImpl.VC}
module dependencies: Defs Utils
package dependencies: array-0.5.2.0 base-4.11.1.0* binary-0.8.5.1
                      bytestring-0.10.8.2 containers-0.5.11.0 deepseq-1.4.3.0
                      ghc-prim-0.5.2.0 integer-gmp-1.0.2.0 mtl-2.2.2 parsec-3.1.13.0*
                      text-1.2.3.0 transformers-0.5.5.0
orphans: appm-0.0.0-bBoXP3Z3yF8cAWvQVfHOK:Utils
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.0:Data.Text.Show
         transformers-0.5.5.0:Control.Monad.Trans.Error
         base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
import  -/  Defs c8776ec9639bd8739e47c30a97e82c26
  exports: 70baa90277fc6a1d9f89c14d3a2d95e0
  Constrs c0c7f7e044a5960d9dcc1d7679b95764
  DB 0e858781930e83bda69da5da2f88fc9e
  Database e605cad1cf2485e27892e093ede2b8a9
  ErrMsg e382a89c48b00d742ff8f78333a8dd20
  P f14abd46365fcb136d54f66c84f72900
  PConstr a4165aea2f2f6f83a06790a6694f2369
  PName 4fd67735798f91f41256b7d11b8508d2
  Pkg 81c1e0a3ea2f4725fafaa34eeff8124c
  Pkg 49fa6cbb2d53aa2b800f192f4268a0c2
  V 0a72cda81074e6d5c9a843c0cf32d0de
  VN d91ee0a2ffcf4c667c511bc41f908b4e
  VNum 8d8e74ee32e201dddef47fc8bf6f9704
  Version 61141ba7ec719ef5a6c2d057138346c9
  maxV d6d6c8777f2c7674b040a5c5b6955b34
  minV 8dfe015ddb5a3a272154e1f1ae689c38
import  -/  Utils 64658fcf41d296a2e90c8c567eb8db7b
  exports: 5eb66a298ff304e448a448d129117718
  isWellFormed dec3eb277e5fc759e5ba8747362ac018
import  -/  base-4.11.1.0:Control.Monad c5f960c67d822497578bffbd3e4c01cf
import  -/  base-4.11.1.0:Data.Char 3e89818e2b8ef1a2cc5393163484da72
import  -/  base-4.11.1.0:Data.Either 39d922b371c4c52d426e9ee66de8371a
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Err 5e26aa744981f14e0f1e4d29c44ac52e
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:GHC.Unicode 8234c40b59f035e845832a42e8725a00
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:Text.Read 6c02630607b565ffcb34e8127673989b
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  parsec-3.1.13.0:Text.Parsec.Char ba652f10f2db2d657f224e91ed53fce9
import  -/  parsec-3.1.13.0:Text.Parsec.Combinator 867c44e0e488ef24ec5bd4da95f91de9
import  -/  parsec-3.1.13.0:Text.Parsec.Prim 48929b84b5d30b299edcfed21f9bf40e
import  -/  parsec-3.1.13.0:Text.Parsec.String 2197da5d25a401744ce266b9d6355c6b
9d1368bd2ae2d54d20c2d65eb04454b2
  $s$fStream[]mtok ::
    Text.Parsec.Prim.Stream [tok] Data.Functor.Identity.Identity tok
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun: @ tok.
                  @ [tok]
                  @ Data.Functor.Identity.Identity
                  @ tok
                  Data.Functor.Identity.$fMonadIdentity
                  (ParserImpl.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok) -}
36db41850ba3770c86d160899f37b46e
  $s$fStream[]mtok_$s$fStream[]mtok_$cuncons ::
    [tok]
    -> Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok]))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ tok (ds :: [tok]) ->
                 case ds of wild {
                   []
                   -> (GHC.Base.Nothing @ (tok, [tok]))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <GHC.Base.Maybe (tok, [tok])>_R))
                   : t ts
                   -> (GHC.Base.Just @ (tok, [tok]) (t, ts))
                        `cast`
                      (Sym (Data.Functor.Identity.N:Identity[0]
                                <GHC.Base.Maybe (tok, [tok])>_R)) }) -}
14c3a21e2389fb8292f3631098b67134
  $tc'CC :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11662952667567742057##
                   4258939785210492315##
                   ParserImpl.$trModule
                   ParserImpl.$tc'CC2
                   0#
                   ParserImpl.$tc'CC1) -}
d2426919b8faa1d469ad3d9b7fdbec2e
  $tc'CC1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
a0455658cbf61137fe3024690e459ea6
  $tc'CC2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS ParserImpl.$tc'CC3) -}
39eb0f1e482c3394cc1d89f2ff10c419
  $tc'CC3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'CC"#) -}
88237752f25c9445b91ca1c76b24eeff
  $tc'DC :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3432936901305464816##
                   9440615895817837187##
                   ParserImpl.$trModule
                   ParserImpl.$tc'DC2
                   0#
                   ParserImpl.$tc'DC1) -}
c94297b72e65028abec5b51fdc42488a
  $tc'DC1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
572b799d229e304249246cc5e262be47
  $tc'DC2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS ParserImpl.$tc'DC3) -}
03e36e2246cd80b0ec9af4393b78a9c1
  $tc'DC3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'DC"#) -}
9934ef97ba29ac4d7b0a5b6c5b33746e
  $tc'Epsilon :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16851614254870754485##
                   14959320167535612827##
                   ParserImpl.$trModule
                   ParserImpl.$tc'Epsilon2
                   0#
                   ParserImpl.$tc'Epsilon1) -}
f4347157f6c593318193a663e9bf005f
  $tc'Epsilon1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
2e64f46bdef7746ad9ee30e72ccb26a4
  $tc'Epsilon2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS ParserImpl.$tc'Epsilon3) -}
86e81972fe09e3492d51c179727c8c83
  $tc'Epsilon3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Epsilon"#) -}
5eff7aabdcf33ecf8d3a6b2e6afa1888
  $tc'NC :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5417184785159207066##
                   9629993674171216075##
                   ParserImpl.$trModule
                   ParserImpl.$tc'NC2
                   0#
                   ParserImpl.$tc'NC1) -}
325ce7bec8ee46ccaccee9548d8a9150
  $tc'NC1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
7f7ab68ec4a7fd197ca89368f91ea46b
  $tc'NC2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS ParserImpl.$tc'NC3) -}
a83b6e32b71632848b042bd4426961e6
  $tc'NC3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'NC"#) -}
214003013a22820fb29442a2d1601c21
  $tc'VC :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16933882824711221047##
                   6846326772670024080##
                   ParserImpl.$trModule
                   ParserImpl.$tc'VC2
                   0#
                   ParserImpl.$tc'VC1) -}
b7930838aee7c0ee317dd725a98c656e
  $tc'VC1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
1134ea0bbecc874feef9e98f7c7e5c81
  $tc'VC2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS ParserImpl.$tc'VC3) -}
21bebf4f60e0b04f170b32bd92341025
  $tc'VC3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'VC"#) -}
7ca6efdfe8629be6e70a44ab740abd58
  $tcClause :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16177831892236447439##
                   8331332863407748178##
                   ParserImpl.$trModule
                   ParserImpl.$tcClause1
                   0#
                   GHC.Types.krep$*) -}
5cfb0c54884893608b9b512690c62161
  $tcClause1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS ParserImpl.$tcClause2) -}
0d061ef71cb1d20e9716dceb8aed76d3
  $tcClause2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Clause"#) -}
afd897ef2255784426602bf32eb25812
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   ParserImpl.$trModule3
                   ParserImpl.$trModule1) -}
4d6e9548f270834246590c10707775b9
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS ParserImpl.$trModule2) -}
96de3e1fecfa1c54b8c2975e8c36b10a
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ParserImpl"#) -}
0f23ad19a92e56e4b61129a687520ef3
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS ParserImpl.$trModule4) -}
095f8867bdb3f0008a4dae5f32986f91
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("appm-0.0.0-bBoXP3Z3yF8cAWvQVfHOK"#) -}
2c8666cca0c671ad7dd9c04246cb8aaf
  $wclauseParser ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (ParserImpl.Clause
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (ParserImpl.Clause
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))>,
     Inline: [0] -}
bfc7a2c7bde53dd9a0361e5fb675c1d6
  $wk ::
    [GHC.Types.Char]
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (Defs.VNum
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Defs.VNum
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))>,
     Inline: [0] -}
c67844201a588a779597fe57f991cc98
  $wlettersAndDigitsParser ::
    GHC.Base.String
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 7,
     Strictness: <L,U><L,U><S,U><S,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Inline: [0],
     Unfolding: (\ @ b
                   (ww :: GHC.Base.String)
                   (ww1 :: Text.Parsec.Pos.SourceName)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: ())
                   (w :: GHC.Types.Char
                         -> Text.Parsec.Prim.State GHC.Base.String ()
                         -> Text.Parsec.Error.ParseError
                         -> Data.Functor.Identity.Identity b)
                   (w1 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Char.$wsatisfy
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   ParserImpl.hyphenParser4
                   @ b
                   ww
                   ww1
                   ww2
                   ww3
                   ww4
                   w
                   (\ (err :: Text.Parsec.Error.ParseError) ->
                    Text.Parsec.Char.$wsatisfy
                      @ GHC.Base.String
                      @ Data.Functor.Identity.Identity
                      @ ()
                      (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                      GHC.Unicode.isDigit
                      @ b
                      ww
                      ww1
                      ww2
                      ww3
                      ww4
                      w
                      (\ (err1 :: Text.Parsec.Error.ParseError) ->
                       w1
                         (case err of ww5 { Text.Parsec.Error.ParseError ww6 ww7 ->
                          case ww6 of ww8 { Text.Parsec.Pos.SourcePos ww9 ww10 ww11 ->
                          case err1 of ww12 { Text.Parsec.Error.ParseError ww13 ww14 ->
                          case Text.Parsec.Prim.$wsetExpectErrors
                                 ww13
                                 ww14
                                 Text.Parsec.Char.digit2 of ww15 { Text.Parsec.Error.ParseError ww16 ww17 ->
                          case ww16 of ww18 { Text.Parsec.Pos.SourcePos ww19 ww20 ww21 ->
                          case Text.Parsec.Error.$wmergeError
                                 ww9
                                 ww10
                                 ww11
                                 ww7
                                 ww19
                                 ww20
                                 ww21
                                 ww17 of ww22 { (#,#) ww23 ww24 ->
                          Text.Parsec.Error.ParseError ww23 ww24 } } } } } })))) -}
7e46bf5378e2959ebf06ce93fd4baf50
  $wsimplePackageNameParser ::
    [GHC.Types.Char]
    -> Text.Parsec.Pos.SourceName
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 8,
     Strictness: <L,U><L,U><S,U><S,U><L,U><L,C(C1(C1(U)))><L,U><L,C(U)>,
     Inline: [0] -}
f5f491b856b0664622e42d864ac4971a
  $wstringContentParser ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 4,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))>,
     Inline: [0],
     Unfolding: (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: GHC.Base.String
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: GHC.Base.String
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$wmany
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [GHC.Types.Char]
                   ParserImpl.generalPackageNameParser6
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   @ b1
                   w
                   (\ (x :: [[GHC.Types.Char]])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    w1
                      (ParserImpl.generalPackageNameParser_go x)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   w2
                   (\ (x :: [[GHC.Types.Char]])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    w3
                      (ParserImpl.generalPackageNameParser_go x)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))) -}
b3ab7e9dd74f8aba5ca303c0d7037d96
  data Clause
    = NC Defs.PName
    | VC Defs.Version
    | DC GHC.Base.String
    | CC Defs.Constrs
    | Epsilon
f515b5735c2fdc9cbe8b075313763075
  asciiLetters :: [GHC.Types.Char]
  {- Unfolding: (ParserImpl.asciiLetters_go 65#) -}
33832182da0feb7a0dc905f42eb322d5
  asciiLetters_go :: GHC.Prim.Int# -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,U> -}
37fe3c62c64ce68cb730e7b69f2211c4
  asciiNotQuoteParser ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String u Data.Functor.Identity.Identity [GHC.Types.Char]
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.asciiNotQuoteParser1
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <[GHC.Types.Char]>_R)) -}
9675e6fad1b54f266b43970d45074ccf
  asciiNotQuoteParser1 ::
    Text.Parsec.Prim.State GHC.Base.String u
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (w2 :: Text.Parsec.Prim.State GHC.Base.String u)
                   (w3 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State GHC.Base.String u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State GHC.Base.String u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wmany1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ u
                   @ GHC.Types.Char
                   (ParserImpl.asciiNotQuoteParser2 @ u)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <u>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   @ b
                   w2
                   w3
                   w4
                   w5
                   w6) -}
8d75181f174a76a6a092b07bfe3146ee
  asciiNotQuoteParser2 ::
    Text.Parsec.Prim.State GHC.Base.String u
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,A><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ u
                   @ b
                   (w2 :: Text.Parsec.Prim.State GHC.Base.String u)
                   (w3 :: GHC.Types.Char
                          -> Text.Parsec.Prim.State GHC.Base.String u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: GHC.Types.Char
                          -> Text.Parsec.Prim.State GHC.Base.String u
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 case w2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wsatisfy
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ u
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   ParserImpl.isValidStringChar
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w3
                   w6 } }) -}
b598a70d098c08dee714f0c959c42d04
  boundParser ::
    GHC.Base.String -> Text.Parsec.String.Parser Defs.Version
  {- Arity: 6,
     Strictness: <S,1*U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.boundParser1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                               <GHC.Base.String>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <Defs.Version>_R)) -}
a55247fec86dbf01665d43007089abb8
  boundParser1 ::
    GHC.Base.String
    -> forall b.
       Text.Parsec.Prim.State GHC.Base.String ()
       -> (Defs.Version
           -> Text.Parsec.Prim.State GHC.Base.String ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Defs.Version
           -> Text.Parsec.Prim.State GHC.Base.String ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <S,1*U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ (op :: GHC.Base.String)
                   @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta1 :: Defs.Version
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: Defs.Version
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 ParserImpl.boundParser25
                   @ Defs.Version
                   (Text.Parsec.Prim.$fApplicativeParsecT2
                      @ [GHC.Types.Char]
                      @ ()
                      @ Data.Functor.Identity.Identity
                      @ GHC.Base.String
                      @ Defs.Version
                      (ParserImpl.boundParser25
                         @ GHC.Base.String
                         (Text.Parsec.Char.string1
                            @ GHC.Base.String
                            @ Data.Functor.Identity.Identity
                            @ ()
                            (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                            op)
                           `cast`
                         (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                   <GHC.Base.String>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <[GHC.Types.Char]>_R)))
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <()>_R
                                <Data.Functor.Identity.Identity>_R
                                <GHC.Base.String>_R))
                      ParserImpl.boundParser2
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <()>_R
                                <Data.Functor.Identity.Identity>_R
                                <Defs.Version>_R)))
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Defs.Version>_R))
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
6f12f1d43b43df8bf6c85d524b767334
  boundParser10 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ ()
                   ParserImpl.boundParser17
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   ParserImpl.boundParser11
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
d126325797282f0a5470367cd77dd425
  boundParser11 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [()]
                   @ ()
                   ParserImpl.boundParser13
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[()]>_R))
                   ParserImpl.boundParser12
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
364290904158b580f95672d6d8639444
  boundParser12 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,U(U,U,U)><L,A><L,A><C(C(C(S))),1*C1(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (ds :: ()
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eok :: ()
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b) ->
                 eok
                   GHC.Tuple.()
                   s1
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError
                      ds4
                      (GHC.Types.[] @ Text.Parsec.Error.Message) })) -}
a5fa23927e0beb0d76e70a1a0bc4e334
  boundParser13 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([()]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([()]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, True)
                (\ @ b
                   (w1 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w2 :: [()]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: [()]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.$wmany
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   ParserImpl.boundParser14
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   @ b
                   w1
                   w2
                   w3
                   w4) -}
6d49594d4f8866535c1958f68418c119
  boundParser14 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Base.String
                   @ ()
                   ParserImpl.boundParser22
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   ParserImpl.boundParser15
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
93ce4468c5cf96f78724ad6bcc89067e
  boundParser15 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ [GHC.Types.Char]
                   @ ()
                   ParserImpl.boundParser18
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   ParserImpl.boundParser16
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
4e8646c6358015027179b2915e96f1f9
  boundParser16 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ ()
                   ParserImpl.boundParser17
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   ParserImpl.boundParser12
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
a40a137958885fec618ccb486d33c02d
  boundParser17 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (()
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (Text.Parsec.Char.spaces1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)) -}
06d99e98254e62855a3b02978f454aa2
  boundParser18 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (5, True, True)
                (\ @ b
                   (w1 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w2 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.$wmany
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   ParserImpl.boundParser19
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   @ b
                   w1
                   w2
                   w3
                   w4) -}
6e145753a358f8821e1aab707016beef
  boundParser19 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,A><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w2 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w3 :: GHC.Types.Char
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: GHC.Types.Char
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 case w2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wnoneOf
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   ParserImpl.boundParser20
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w3
                   w6 } }) -}
d6f0f6a94abf26cf727f52bf5e800d7a
  boundParser2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Version
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Defs.Version
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (ParserImpl.boundParser25
                   @ Defs.Version
                   ParserImpl.boundParser3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Defs.Version>_R))) -}
b65295c1616d81cb85c10dcf44b500c4
  boundParser20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   ParserImpl.boundParser21) -}
ebb355207be34eae7c488b5644c14b72
  boundParser21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\n"#) -}
d6eb0990a1bba096b160c86bbac8cab0
  boundParser22 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (Text.Parsec.Char.string1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   ParserImpl.boundParser23) -}
b263917ab5041d269da2486dfddcf6d0
  boundParser23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   ParserImpl.boundParser24) -}
c65edae56005c6e0a86974e902adbd81
  boundParser24 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("--"#) -}
146ae0a173155e8756bb6c30cb44a9b6
  boundParser25 ::
    Text.Parsec.String.Parser a
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (a
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (a
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <C(C(C(C(C(S))))),1*C1(C1(C1(C1(C1(U)))))><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
c0c1349c2c9faf5bee90368701a053b7
  boundParser3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Version
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.Version
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ Defs.Version
                   ParserImpl.boundParser10
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   ParserImpl.boundParser4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Defs.Version>_R))) -}
5ec2645949dc1ed81e5de1b6076c380d
  boundParser4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Version
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.Version
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: Defs.Version
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Defs.Version
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Combinator.$wsepBy1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ Defs.VNum
                   @ GHC.Types.Char
                   ParserImpl.boundParser7
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Defs.VNum>_R))
                   ParserImpl.boundParser5
                   @ b1
                   s1
                   (\ (x :: [Defs.VNum])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    cok
                      x `cast` (Sym (Defs.N:Version[0]))
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   cerr
                   (\ (x :: [Defs.VNum])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    eok
                      x `cast` (Sym (Defs.N:Version[0]))
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eerr) -}
4075792cc82d1be17849c1bab5fbc967
  boundParser5 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Types.Char
  {- Unfolding: (Text.Parsec.Char.char
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   ParserImpl.boundParser6) -}
0184fe385c4ecf9a79c0b80188f1ce7a
  boundParser6 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '.'#) -}
7b1a499500865fdec77d2c0d0f074070
  boundParser7 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.VNum
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.VNum
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: Defs.VNum
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Defs.VNum
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Combinator.$wmany1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ GHC.Types.Char
                   ParserImpl.boundParser8
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   @ b1
                   s1
                   (\ (x :: [GHC.Types.Char])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    ParserImpl.$wk
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: Defs.VNum)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: [GHC.Types.Char])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    ParserImpl.$wk
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: Defs.VNum)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
825bc1dec7e65eafc9d2e5ea9506f8f2
  boundParser8 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta1 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   ParserImpl.boundParser9
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   Text.Parsec.Char.digit2
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
3bd87f4b87dacb0e751023a179b95510
  boundParser9 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,A><L,C(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w2 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w3 :: GHC.Types.Char
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: GHC.Types.Char
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 case w2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wsatisfy
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   GHC.Unicode.isDigit
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w3
                   w6 } }) -}
115657217558798fcb02f4d271a01d16
  clauseParser :: Text.Parsec.String.Parser ParserImpl.Clause
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.clauseParser1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <ParserImpl.Clause>_R)) -}
087c57667d8c315d8952151875ba418e
  clauseParser1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (ParserImpl.Clause
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (ParserImpl.Clause
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (ParserImpl.boundParser25
                   @ ParserImpl.Clause
                   ParserImpl.clauseParser2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <ParserImpl.Clause>_R))) -}
f685b53a319a2abc8417fa9f2bec4b1f
  clauseParser2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (ParserImpl.Clause
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (ParserImpl.Clause
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Inline: [0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: ParserImpl.Clause
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: ParserImpl.Clause
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 ParserImpl.$wclauseParser @ b1 w w1 w2 w3) -}
8150233b93a1fd872ad7ac7d789d1115
  cleanUp ::
    [ParserImpl.Clause]
    -> GHC.Base.Maybe
         (Defs.PName, Defs.Version, GHC.Base.String, Defs.Constrs)
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [ParserImpl.Clause]) ->
                 case ds of wild {
                   []
                   -> GHC.Base.Nothing
                        @ (Defs.PName, Defs.Version, GHC.Base.String, Defs.Constrs)
                   : ipv ipv1
                   -> let {
                        nameClauses :: [ParserImpl.Clause]
                        = GHC.List.filter @ ParserImpl.Clause ParserImpl.cleanUp9 wild
                      } in
                      case GHC.List.$wlenAcc @ ParserImpl.Clause nameClauses 0# of ww2 {
                        DEFAULT
                        -> GHC.Base.Nothing
                             @ (Defs.PName, Defs.Version, GHC.Base.String, Defs.Constrs)
                        1#
                        -> let {
                             versClauses :: [ParserImpl.Clause]
                             = GHC.List.filter @ ParserImpl.Clause ParserImpl.cleanUp8 wild
                           } in
                           case GHC.List.$wlenAcc
                                  @ ParserImpl.Clause
                                  versClauses
                                  0# of ww1 { DEFAULT ->
                           case GHC.Prim.># ww1 1# of lwild {
                             DEFAULT
                             -> let {
                                  descClauses :: [ParserImpl.Clause]
                                  = GHC.List.filter @ ParserImpl.Clause ParserImpl.cleanUp7 wild
                                } in
                                case GHC.List.$wlenAcc
                                       @ ParserImpl.Clause
                                       descClauses
                                       0# of ww3 { DEFAULT ->
                                case GHC.Prim.># ww3 1# of lwild1 {
                                  DEFAULT
                                  -> case Utils.isWellFormed_go1
                                            (ParserImpl.cleanUp_go wild) of wild1 {
                                       GHC.Base.Nothing
                                       -> GHC.Base.Nothing
                                            @ (Defs.PName, Defs.Version, GHC.Base.String,
                                               Defs.Constrs)
                                       GHC.Base.Just x
                                       -> case Utils.isWellFormed_go
                                                 x
                                                 (GHC.Types.[]
                                                    @ (Defs.PName, Defs.PConstr)) of wild2 {
                                            GHC.Base.Nothing
                                            -> GHC.Base.Nothing
                                                 @ (Defs.PName, Defs.Version, GHC.Base.String,
                                                    Defs.Constrs)
                                            GHC.Base.Just nice
                                            -> GHC.Base.Just
                                                 @ (Defs.PName, Defs.Version, [GHC.Types.Char],
                                                    Defs.Constrs)
                                                 (case nameClauses of wild3 {
                                                    []
                                                    -> case GHC.List.badHead ret_ty Defs.PName of {}
                                                    : x1 ds1
                                                    -> case x1 of wild4 {
                                                         DEFAULT -> ParserImpl.cleanUp6
                                                         ParserImpl.NC n1 -> n1 } },
                                                  case ww1 of wild3 {
                                                    DEFAULT
                                                    -> case versClauses of wild4 {
                                                         []
                                                         -> case GHC.List.badHead
                                                            ret_ty Defs.Version
                                                            of {}
                                                         : x1 ds1
                                                         -> case x1 of wild5 {
                                                              DEFAULT -> ParserImpl.cleanUp5
                                                              ParserImpl.VC v -> v } }
                                                    0#
                                                    -> ParserImpl.cleanUp2
                                                         `cast`
                                                       (Sym (Defs.N:Version[0])) },
                                                  case ww3 of wild3 {
                                                    DEFAULT
                                                    -> case descClauses of wild4 {
                                                         []
                                                         -> case GHC.List.badHead
                                                            ret_ty [GHC.Types.Char]
                                                            of {}
                                                         : x1 ds1
                                                         -> case x1 of wild5 {
                                                              DEFAULT -> ParserImpl.cleanUp1
                                                              ParserImpl.DC s -> s } }
                                                    0# -> GHC.Types.[] @ GHC.Types.Char },
                                                  nice) } }
                                  1#
                                  -> GHC.Base.Nothing
                                       @ (Defs.PName, Defs.Version, GHC.Base.String,
                                          Defs.Constrs) } }
                             1#
                             -> GHC.Base.Nothing
                                  @ (Defs.PName, Defs.Version, GHC.Base.String,
                                     Defs.Constrs) } } } }) -}
161afcf2fbe7816bcd6ddd41cfbf76c2
  cleanUp1 :: [GHC.Types.Char]
  {- Strictness: x -}
0a47bacee58cae4be029cabaaf97c24a
  cleanUp2 :: [Defs.VNum]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Defs.VNum
                   ParserImpl.cleanUp3
                   (GHC.Types.[] @ Defs.VNum)) -}
1c6a8bc70f455b4a078658c435a7d54e
  cleanUp3 :: Defs.VNum
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Defs.VN
                   ParserImpl.cleanUp4
                   (GHC.Types.[] @ GHC.Types.Char)) -}
4d04ea31003c93e0ea6a7cbbd1c7d7ea
  cleanUp4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
6a9294fc44bcccd73bc46434fe95bce3
  cleanUp5 :: Defs.Version
  {- Strictness: x -}
f16ace93001ba8fbfb9c6e169a94e797
  cleanUp6 :: Defs.PName
  {- Strictness: x -}
bb526e15068666d9c1f6e1cf48529e89
  cleanUp7 :: ParserImpl.Clause -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: ParserImpl.Clause) ->
                 case ds of wild {
                   DEFAULT -> GHC.Types.False
                   ParserImpl.DC ds1 -> GHC.Types.True }) -}
7d7d44f18d5a4432778d3ab5aa4f6310
  cleanUp8 :: ParserImpl.Clause -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: ParserImpl.Clause) ->
                 case ds of wild {
                   DEFAULT -> GHC.Types.False
                   ParserImpl.VC ds1 -> GHC.Types.True }) -}
36be15daf5119e5c8be2abbdce329019
  cleanUp9 :: ParserImpl.Clause -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: ParserImpl.Clause) ->
                 case ds of wild {
                   DEFAULT -> GHC.Types.False
                   ParserImpl.NC ds1 -> GHC.Types.True }) -}
688ec8a1514e43c5a1a547123d3851cb
  cleanUp_go :: [ParserImpl.Clause] -> [[(Defs.PName, Defs.PConstr)]]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
f405b1f27f245f4f6d70307f7df57d5d
  conflictsParser ::
    Text.Parsec.String.Parser [(Defs.PName, Defs.PConstr)]
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.conflictsParser1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[(Defs.PName, Defs.PConstr)]>_R)) -}
ef3fddc5f5feceaec8ab4b7fa9bf9c96
  conflictsParser1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([(Defs.PName, Defs.PConstr)]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([(Defs.PName, Defs.PConstr)]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (ParserImpl.boundParser25
                   @ [(Defs.PName, Defs.PConstr)]
                   ParserImpl.conflictsParser2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[(Defs.PName, Defs.PConstr)]>_R))) -}
72e206d0bff58be0c0f1adcbd6f4974f
  conflictsParser10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   ParserImpl.conflictsParser11) -}
3b3b9e1ad1c9bb6e940bd1796d702a0b
  conflictsParser11 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<"#) -}
5eeab4cbbb5b5af5c6f4ff6cdf0d4275
  conflictsParser12 ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> forall b.
       Text.Parsec.Prim.State GHC.Base.String ()
       -> ((Defs.PName, (GHC.Types.Bool, Defs.Version, Defs.Version))
           -> Text.Parsec.Prim.State GHC.Base.String ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> ((Defs.PName, (GHC.Types.Bool, Defs.Version, Defs.Version))
           -> Text.Parsec.Prim.State GHC.Base.String ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 8,
     Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
4cec8f18eff94b949744c82bc37ea621
  conflictsParser13 :: Text.Parsec.String.Parser ()
  {- Unfolding: (ParserImpl.keywordParser
                   (GHC.CString.unpackCString# ParserImpl.conflictsParser14)) -}
2022b9632f49ce622e879fcf546c2ab1
  conflictsParser14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("conflicts"#) -}
6b173e32cd6cfa769a2931bfdf93da00
  conflictsParser2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([(Defs.PName, Defs.PConstr)]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([(Defs.PName, Defs.PConstr)]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ [(Defs.PName, Defs.PConstr)]
                   ParserImpl.conflictsParser13
                   ParserImpl.conflictsParser3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[(Defs.PName, Defs.PConstr)]>_R))) -}
b5f536cd87cc076f508db9fcbece32c8
  conflictsParser3 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([(Defs.PName, Defs.PConstr)]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([(Defs.PName, Defs.PConstr)]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w3 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w4 :: [(Defs.PName, Defs.PConstr)]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: [(Defs.PName, Defs.PConstr)]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w7 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wsepBy1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ (Defs.PName, Defs.PConstr)
                   @ GHC.Types.Char
                   ParserImpl.conflictsParser7
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <(Defs.PName, (GHC.Types.Bool, Defs.Version, Defs.Version))>_R))
                   ParserImpl.conflictsParser4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   @ b
                   w3
                   w4
                   w5
                   w6
                   w7) -}
1fff84c6e2c874c936208b8a9f99edd0
  conflictsParser4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (ParserImpl.boundParser25
                   @ GHC.Types.Char
                   ParserImpl.conflictsParser5) -}
841be89d72c50a3607873882f5ab1137
  conflictsParser5 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Types.Char
  {- Unfolding: (Text.Parsec.Char.char
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   ParserImpl.conflictsParser6) -}
5d02b0d519303a06b4298f66de0e5886
  conflictsParser6 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# ','#) -}
140acb8a2e0c3c0399fdbb76db54f34f
  conflictsParser7 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ((Defs.PName, (GHC.Types.Bool, Defs.Version, Defs.Version))
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((Defs.PName, (GHC.Types.Bool, Defs.Version, Defs.Version))
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (ParserImpl.conflictsParser12
                   GHC.Types.False
                   ParserImpl.conflictsParser10
                   ParserImpl.conflictsParser8) -}
8888f138ccd67be5a3ae71f8ac0fd1f1
  conflictsParser8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   ParserImpl.conflictsParser9) -}
618eb6e58f1ca17a6856b7ec7bf5333c
  conflictsParser9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (">="#) -}
dc3ea728f714205356b255b659b6d111
  databaseParser :: Text.Parsec.String.Parser Defs.Database
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.databaseParser1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Defs.Database>_R)) -}
413df60c60504e35810de4c2b4470e6e
  databaseParser1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Database
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Defs.Database
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (ParserImpl.boundParser25
                   @ Defs.Database
                   ParserImpl.databaseParser2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Defs.Database>_R))) -}
9395180c628145f02208c881c9e3862b
  databaseParser2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Database
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.Database
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ Defs.Database
                   ParserImpl.boundParser10
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   ParserImpl.databaseParser3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Defs.Database>_R))) -}
1da22b261a83e355848fe9104876cc86
  databaseParser3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Database
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.Database
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
b73fe4851197a9f12b948823941b485d
  generalPackageNameParser ::
    Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.generalPackageNameParser1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Base.String>_R)) -}
2ad2368ae6d1dce27e4f52a8edb9afd8
  generalPackageNameParser1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (ParserImpl.boundParser25
                   @ GHC.Base.String
                   ParserImpl.generalPackageNameParser2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String>_R))) -}
8c55b32223dcf75480ffd53cc3c83806
  generalPackageNameParser2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ GHC.Base.String
                   ParserImpl.generalPackageNameParser4
                   ParserImpl.generalPackageNameParser3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Base.String>_R))) -}
3349542e525ee26c4e48205e6b7665a9
  generalPackageNameParser3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,U><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: GHC.Base.String
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: GHC.Base.String
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 ParserImpl.$wstringContentParser
                   @ b1
                   s1
                   (\ (x :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Text.Parsec.Prim.$fApplicativeParsecT2
                      @ [GHC.Types.Char]
                      @ ()
                      @ Data.Functor.Identity.Identity
                      @ GHC.Types.Char
                      @ GHC.Base.String
                      ParserImpl.generalPackageNameParser4
                      (Text.Parsec.Prim.$fApplicativeParsecT5
                         @ GHC.Base.String
                         @ [GHC.Types.Char]
                         @ ()
                         @ Data.Functor.Identity.Identity
                         x)
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <()>_R
                                <Data.Functor.Identity.Identity>_R
                                <GHC.Base.String>_R))
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: GHC.Base.String)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    Text.Parsec.Prim.$fApplicativeParsecT2
                      @ [GHC.Types.Char]
                      @ ()
                      @ Data.Functor.Identity.Identity
                      @ GHC.Types.Char
                      @ GHC.Base.String
                      ParserImpl.generalPackageNameParser4
                      (Text.Parsec.Prim.$fApplicativeParsecT5
                         @ GHC.Base.String
                         @ [GHC.Types.Char]
                         @ ()
                         @ Data.Functor.Identity.Identity
                         x)
                        `cast`
                      (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                <[GHC.Types.Char]>_R
                                <()>_R
                                <Data.Functor.Identity.Identity>_R
                                <GHC.Base.String>_R))
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: GHC.Base.String)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))) -}
044d538dfde46bb8bb66422c6433da9c
  generalPackageNameParser4 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Types.Char
  {- Unfolding: (Text.Parsec.Char.char
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   ParserImpl.generalPackageNameParser5) -}
5a7a78c10c7af072be323d8ddbcf3d1e
  generalPackageNameParser5 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '"'#) -}
0a3f66f7e913ff0030ff326c51eb0e80
  generalPackageNameParser6 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: (\ @ b
                   (s1 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (cok :: [GHC.Types.Char]
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eok :: [GHC.Types.Char]
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wmany1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ GHC.Types.Char
                   (ParserImpl.asciiNotQuoteParser2 @ ())
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   @ b
                   s1
                   cok
                   cerr
                   eok
                   (\ (err :: Text.Parsec.Error.ParseError) ->
                    let {
                      eerr1 :: Text.Parsec.Error.ParseError
                               -> Data.Functor.Identity.Identity b
                        {- Arity: 1, Strictness: <L,1*U(U(U,U,U),U)>,
                           Unfolding: InlineRule (1, True, False)
                                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                                       eerr (Text.Parsec.Error.mergeError err err')) -}
                      = \ (err' :: Text.Parsec.Error.ParseError) ->
                        eerr (Text.Parsec.Error.mergeError err err')
                    } in
                    ParserImpl.generalPackageNameParser7
                      @ ()
                      @ b
                      s1
                      cok
                      eerr1
                      (\ (y :: [GHC.Types.Char])
                         (s' :: Text.Parsec.Prim.State GHC.Base.String ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok y s' (Text.Parsec.Error.mergeError err err'))
                      eerr1)) -}
4d7734c9139a088e241f033fc3e6247b
  generalPackageNameParser7 ::
    Text.Parsec.Prim.State GHC.Base.String u
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String u
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U> -}
35a84e9d76100bf02f0b8b2b6e289708
  generalPackageNameParser_go ::
    [[GHC.Types.Char]] -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
3dcb26940ae0b1381383bcb606831f38
  hyphenParser :: Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.hyphenParser1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Base.String>_R)) -}
40157589867cead7cd95778f2e2d12bc
  hyphenParser1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: GHC.Base.String
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: GHC.Base.String
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 ParserImpl.hyphenParser_m1
                   `cast`
                 (Text.Parsec.Prim.N:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Types.Char>_R)
                   @ b1
                   s1
                   (\ (x :: GHC.Types.Char)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    ParserImpl.hyphenParser2
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: GHC.Base.String)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: GHC.Types.Char)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    ParserImpl.hyphenParser2
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: GHC.Base.String)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
44590cbec4fb187e2031840198c72e5f
  hyphenParser2 ::
    GHC.Types.Char
    -> forall b.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (GHC.Base.String
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (GHC.Base.String
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ (hyp :: GHC.Types.Char)
                   @ b
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: GHC.Base.String
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: GHC.Base.String
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wmany1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ GHC.Types.Char
                   ParserImpl.hyphenParser3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   @ b
                   eta
                   (\ (x :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    eta1
                      (GHC.Types.: @ GHC.Types.Char hyp x)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta2
                   (\ (x :: GHC.Base.String)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    eta3
                      (GHC.Types.: @ GHC.Types.Char hyp x)
                      s2
                      (case s2 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                       case ds4 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eta4) -}
88fcf01ac38b446f3ecea6fbf5cb260f
  hyphenParser3 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,A><L,A><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w1 :: GHC.Types.Char
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: GHC.Types.Char
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 ParserImpl.$wlettersAndDigitsParser
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w1
                   w4 } }) -}
ef7aeb5b99e9c23c90bab698a370336c
  hyphenParser4 :: GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (c :: GHC.Types.Char) ->
                 GHC.List.elem
                   @ GHC.Types.Char
                   GHC.Classes.$fEqChar
                   c
                   ParserImpl.asciiLetters) -}
cb7aeb85088153b25d712b23d30392a4
  hyphenParser5 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '-'#) -}
2cf5f141e95d311cd251bf0064802fb7
  hyphenParser_m1 ::
    Text.Parsec.Prim.ParsecT
      [GHC.Types.Char] () Data.Functor.Identity.Identity GHC.Types.Char
  {- Unfolding: (Text.Parsec.Char.char
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   ParserImpl.hyphenParser5) -}
b5fb54f09f77995caee651794a3da7ea
  isAlphaNumOrHyphen :: GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (c :: GHC.Types.Char) ->
                 case c of wild { GHC.Types.C# c# ->
                 case {__pkg_ccall base-4.11.1.0 GHC.Prim.Int#
                                                 -> GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Prim.Int# #)}
                        (GHC.Prim.ord# c#)
                        GHC.Prim.realWorld# of wild1 { (#,#) ds ds1 ->
                 case ds1 of wild2 {
                   DEFAULT -> GHC.Types.True
                   0#
                   -> case c# of wild4 {
                        DEFAULT -> GHC.Types.False '-'# -> GHC.Types.True } } } }) -}
222f24e8551dc7fa1891b416479fa08d
  isValidStringChar :: GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (c :: GHC.Types.Char) ->
                 case c of wild { GHC.Types.C# c1 ->
                 case GHC.Prim.ltChar# c1 '\128'# of lwild {
                   DEFAULT -> GHC.Types.False
                   1#
                   -> case c1 of wild1 {
                        DEFAULT -> GHC.Types.True '"'# -> GHC.Types.False } } }) -}
3fb38ddd1d36575a766bdac846c6f7e5
  keywordParser :: GHC.Base.String -> Text.Parsec.String.Parser ()
  {- Arity: 1, Strictness: <S,1*U> -}
720ee46eed9fcee3898bc9845134452a
  lettersAndDigitsParser :: Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.lettersAndDigitsParser1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[GHC.Types.Char]>_R)) -}
4c3729a8eae442c4abe9bd85b279a831
  lettersAndDigitsParser1 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w2 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w3 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wmany1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ GHC.Types.Char
                   ParserImpl.hyphenParser3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   @ b
                   w2
                   w3
                   w4
                   w5
                   w6) -}
5149af3578cb7d2a7e6cb0cb3b4333eb
  pComments :: Text.Parsec.String.Parser ()
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.boundParser14
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <()>_R)) -}
4c97e6f30890e06c7088a169327365c0
  pSpaceComments :: Text.Parsec.String.Parser ()
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.boundParser10
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <()>_R)) -}
cb2ae8488e7860307d78c134e9c4838b
  packageNameParser :: Text.Parsec.String.Parser Defs.PName
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.packageNameParser1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Defs.PName>_R)) -}
4deffec5be1924e44953134a552edcfc
  packageNameParser1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.PName
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Defs.PName
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (ParserImpl.boundParser25
                   @ Defs.PName
                   ParserImpl.packageNameParser2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Defs.PName>_R))) -}
1cf2d8d23f822a6e706bf42d50634e61
  packageNameParser2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.PName
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.PName
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)> -}
0b74e344d44a01b83dfdfdc5ee12c71e
  packageParser :: Text.Parsec.String.Parser Defs.Pkg
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.packageParser1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Defs.Pkg>_R)) -}
77cdb9355e0d9578f5f2419bdb3b1867
  packageParser1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Pkg
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Defs.Pkg
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (ParserImpl.boundParser25
                   @ Defs.Pkg
                   ParserImpl.packageParser2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Defs.Pkg>_R))) -}
4bb10806a0132a5605a3eee71e46a854
  packageParser10 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Clauses are not semantically well-formed."#) -}
8782e06e1c2cf0631a4b7ea5f453ecbd
  packageParser11 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (ParserImpl.boundParser25
                   @ GHC.Types.Char
                   ParserImpl.packageParser12) -}
b14f6d299788841bf32afafbe19c69e6
  packageParser12 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Types.Char
  {- Unfolding: (Text.Parsec.Char.char
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   ParserImpl.packageParser13) -}
6b0e94f6bca596efecae3ae127de6ded
  packageParser13 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '}'#) -}
d95c9bb815e1a33b8f69d0630726b550
  packageParser14 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (ParserImpl.boundParser25
                   @ GHC.Types.Char
                   ParserImpl.packageParser15) -}
46b50c3774cec20c235b1a669784cd35
  packageParser15 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Types.Char
  {- Unfolding: (Text.Parsec.Char.char
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   ParserImpl.packageParser16) -}
8eda693f17169668a06fde8fef176f56
  packageParser16 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# ';'#) -}
f9842c6f08e217e3891157ec0ef82513
  packageParser17 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (ParserImpl.boundParser25
                   @ GHC.Types.Char
                   ParserImpl.packageParser18) -}
b2c6c5a5a2fbf89113b42eb2348d9c5f
  packageParser18 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Types.Char
  {- Unfolding: (Text.Parsec.Char.char
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                   ParserImpl.packageParser19) -}
182ea484777a6fc383f9f90405284343
  packageParser19 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '{'#) -}
7d9ac33bf4b406c0608800a694f7f288
  packageParser2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Pkg
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.Pkg
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ Defs.Pkg
                   ParserImpl.packageParser20
                   ParserImpl.packageParser3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Defs.Pkg>_R))) -}
90d351f0f1fff4c70d16cea28a53ef85
  packageParser20 :: Text.Parsec.String.Parser ()
  {- Unfolding: (ParserImpl.keywordParser
                   (GHC.CString.unpackCString# ParserImpl.packageParser21)) -}
1d55a6da59416103ed3ae3fa50dce802
  packageParser21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("package"#) -}
c12ea65d4256201f4b0df845ca4a506b
  packageParser3 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Pkg
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.Pkg
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ Defs.Pkg
                   ParserImpl.packageParser17
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   ParserImpl.packageParser4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <Defs.Pkg>_R))) -}
0324736101cee6bdef02e7819a24c42b
  packageParser4 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Pkg
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Defs.Pkg
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: Defs.Pkg
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: Defs.Pkg
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Combinator.$wsepBy1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ ParserImpl.Clause
                   @ GHC.Types.Char
                   ParserImpl.clauseParser1
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <ParserImpl.Clause>_R))
                   ParserImpl.packageParser14
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   @ b1
                   s1
                   (\ (x :: [ParserImpl.Clause])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    ParserImpl.packageParser5
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: Defs.Pkg)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       cok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       cerr (Text.Parsec.Error.mergeError err err')))
                   cerr
                   (\ (x :: [ParserImpl.Clause])
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                      (err :: Text.Parsec.Error.ParseError)[OneShot] ->
                    ParserImpl.packageParser5
                      x
                      @ b1
                      s2
                      cok
                      cerr
                      (\ (x1 :: Defs.Pkg)
                         (s3 :: Text.Parsec.Prim.State [GHC.Types.Char] ())[OneShot]
                         (err' :: Text.Parsec.Error.ParseError)[OneShot] ->
                       eok x1 s3 (Text.Parsec.Error.mergeError err err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err err')))
                   eerr) -}
7a4a8c409200430187593fb8435fd5ac
  packageParser5 ::
    [ParserImpl.Clause]
    -> forall b1.
       Text.Parsec.Prim.State [GHC.Types.Char] ()
       -> (Defs.Pkg
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Defs.Pkg
           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b1)
       -> Data.Functor.Identity.Identity b1
  {- Arity: 6,
     Strictness: <L,1*U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ (clauses :: [ParserImpl.Clause])
                   @ b1
                   (eta :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (eta1 :: Defs.Pkg
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta3 :: Defs.Pkg
                            -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ Defs.Pkg
                   ParserImpl.packageParser11
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   (case ParserImpl.cleanUp clauses of wild {
                      GHC.Base.Nothing
                      -> ParserImpl.packageParser6
                           `cast`
                         (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                   <[GHC.Types.Char]>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <Defs.Pkg>_R))
                      GHC.Base.Just ds
                      -> case ds of wild1 { (,,,) name ver descr constr ->
                         let {
                           x :: Defs.Pkg = Defs.Pkg name ver descr constr
                         } in
                         (\ @ b
                            (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                            (ds1 :: Defs.Pkg
                                    -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                                    -> Text.Parsec.Error.ParseError
                                    -> Data.Functor.Identity.Identity b)[OneShot]
                            (ds2 :: Text.Parsec.Error.ParseError
                                    -> Data.Functor.Identity.Identity b)[OneShot]
                            (eok :: Defs.Pkg
                                    -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                                    -> Text.Parsec.Error.ParseError
                                    -> Data.Functor.Identity.Identity b)[OneShot]
                            (ds3 :: Text.Parsec.Error.ParseError
                                    -> Data.Functor.Identity.Identity b)[OneShot] ->
                          eok
                            x
                            s1
                            (case s1 of wild2 { Text.Parsec.Prim.State ds4 ds5 ds6 ->
                             Text.Parsec.Error.ParseError
                               ds5
                               (GHC.Types.[] @ Text.Parsec.Error.Message) }))
                           `cast`
                         (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                   <[GHC.Types.Char]>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <Defs.Pkg>_R)) } })
                   @ b1
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
afa244cd767d7ad69de3aec46ef83f7a
  packageParser6 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (Defs.Pkg
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Defs.Pkg
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,1*U(A,U,A)><L,A><L,A><L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (ds :: Defs.Pkg
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (ds1 :: Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (ds2 :: Defs.Pkg
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 eerr
                   (case s1 of wild { Text.Parsec.Prim.State ds3 ds4 ds5 ->
                    Text.Parsec.Error.ParseError ds4 ParserImpl.packageParser7 })) -}
5934bae03955332ca535f4d8f80de156
  packageParser7 :: [Text.Parsec.Error.Message]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Text.Parsec.Error.Message
                   ParserImpl.packageParser8
                   (GHC.Types.[] @ Text.Parsec.Error.Message)) -}
0700a29d23921c0081421b5057542fc2
  packageParser8 :: Text.Parsec.Error.Message
  {- Strictness: m4,
     Unfolding: (Text.Parsec.Error.Message ParserImpl.packageParser9) -}
55b03e62f15b0a76c9bf9363a18dbe5b
  packageParser9 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   ParserImpl.packageParser10) -}
7306d5891c22d25933d8757a34906561
  parseDatabase ::
    GHC.Base.String -> Data.Either.Either Defs.ErrMsg Defs.Database
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 case (Text.Parsec.Prim.runPT
                         @ GHC.Base.String
                         @ Data.Functor.Identity.Identity
                         @ GHC.Types.Char
                         @ ()
                         @ Defs.Database
                         (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                         ParserImpl.databaseParser1
                           `cast`
                         (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                   <[GHC.Types.Char]>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <Defs.Database>_R))
                         GHC.Tuple.()
                         (GHC.Types.[] @ GHC.Types.Char)
                         s)
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Data.Either.Either
                              Text.Parsec.Error.ParseError Defs.Database>_R) of wild {
                   Data.Either.Left err
                   -> Data.Either.Left
                        @ GHC.Base.String
                        @ Defs.Database
                        (Text.Parsec.Error.$fShowParseError_$cshow err)
                   Data.Either.Right db
                   -> Data.Either.Right @ Defs.ErrMsg @ Defs.Database db }) -}
d16e894e2c5a25bab6acd24f1953887e
  parseVersion ::
    GHC.Base.String -> Data.Either.Either Defs.ErrMsg Defs.Version
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (s :: GHC.Base.String) ->
                 case (Text.Parsec.Prim.runPT
                         @ GHC.Base.String
                         @ Data.Functor.Identity.Identity
                         @ GHC.Types.Char
                         @ ()
                         @ Defs.Version
                         (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                         ParserImpl.boundParser2
                           `cast`
                         (Sym (Text.Parsec.Prim.N:ParsecT[0]
                                   <[GHC.Types.Char]>_R
                                   <()>_R
                                   <Data.Functor.Identity.Identity>_R
                                   <Defs.Version>_R))
                         GHC.Tuple.()
                         (GHC.Types.[] @ GHC.Types.Char)
                         s)
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Data.Either.Either
                              Text.Parsec.Error.ParseError Defs.Version>_R) of wild {
                   Data.Either.Left err
                   -> Data.Either.Left
                        @ GHC.Base.String
                        @ Defs.Version
                        (Text.Parsec.Error.$fShowParseError_$cshow err)
                   Data.Either.Right version
                   -> Data.Either.Right @ Defs.ErrMsg @ Defs.Version version }) -}
be80cba3fcbf5c9935e435f3ad158c81
  quoteParser ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String u Data.Functor.Identity.Identity [GHC.Types.Char]
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.generalPackageNameParser7
                  `cast`
                (forall (u :: <*>_N).
                 Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <GHC.Base.String>_R
                          <u>_R
                          <Data.Functor.Identity.Identity>_R
                          <[GHC.Types.Char]>_R)) -}
1f06dcb8e1d12d7875f7956377cd09c4
  requiredParser ::
    Text.Parsec.String.Parser [(Defs.PName, Defs.PConstr)]
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.requiredParser1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[(Defs.PName, Defs.PConstr)]>_R)) -}
74f2c042b31b6b3a6bd38d1a66ad6e33
  requiredParser1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([(Defs.PName, Defs.PConstr)]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([(Defs.PName, Defs.PConstr)]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (ParserImpl.boundParser25
                   @ [(Defs.PName, Defs.PConstr)]
                   ParserImpl.requiredParser2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[(Defs.PName, Defs.PConstr)]>_R))) -}
7723261288af6c62438e1589ece511fd
  requiredParser2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([(Defs.PName, Defs.PConstr)]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([(Defs.PName, Defs.PConstr)]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Unfolding: (Text.Parsec.Prim.$fApplicativeParsecT2
                   @ [GHC.Types.Char]
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ ()
                   @ [(Defs.PName, Defs.PConstr)]
                   ParserImpl.requiredParser5
                   ParserImpl.requiredParser3
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[(Defs.PName, Defs.PConstr)]>_R))) -}
edf14941d1d9e0b3cd31480ec880b7d6
  requiredParser3 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ([(Defs.PName, Defs.PConstr)]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([(Defs.PName, Defs.PConstr)]
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w3 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (w4 :: [(Defs.PName, Defs.PConstr)]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w5 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w6 :: [(Defs.PName, Defs.PConstr)]
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)
                   (w7 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b) ->
                 Text.Parsec.Combinator.$wsepBy1
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   @ ()
                   @ (Defs.PName, Defs.PConstr)
                   @ GHC.Types.Char
                   ParserImpl.requiredParser4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <(Defs.PName, (GHC.Types.Bool, Defs.Version, Defs.Version))>_R))
                   ParserImpl.conflictsParser4
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   @ b
                   w3
                   w4
                   w5
                   w6
                   w7) -}
f03695a16d10d866ca00673a7ebfdacf
  requiredParser4 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> ((Defs.PName, (GHC.Types.Bool, Defs.Version, Defs.Version))
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ((Defs.PName, (GHC.Types.Bool, Defs.Version, Defs.Version))
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (ParserImpl.conflictsParser12
                   GHC.Types.True
                   ParserImpl.conflictsParser8
                   ParserImpl.conflictsParser10) -}
1e276688ff55ac938e77408cc6ee6be7
  requiredParser5 :: Text.Parsec.String.Parser ()
  {- Unfolding: (ParserImpl.keywordParser
                   (GHC.CString.unpackCString# ParserImpl.requiredParser6)) -}
d5e21fef06f65f6814816b475c9e9537
  requiredParser6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("requires"#) -}
183c3243d233869d0163e2d558992a8c
  simplePackageNameParser ::
    Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.simplePackageNameParser1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <[GHC.Types.Char]>_R)) -}
8b55aa08169458333af0e717ad587335
  simplePackageNameParser1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (ParserImpl.boundParser25
                   @ [GHC.Types.Char]
                   ParserImpl.simplePackageNameParser2
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <[GHC.Types.Char]>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))) -}
7a0eccf7a99d31ab43ef33f5cfdc6776
  simplePackageNameParser2 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> ([GHC.Types.Char]
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <S(LS(LSS)S),1*U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,A><L,C(U)>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: [GHC.Types.Char]
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 case w of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 ParserImpl.$wsimplePackageNameParser
                   @ b1
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w1
                   w2
                   w4 } }) -}
482edc495740bc6a8eb3f768ee923b7f
  singleConstParser ::
    GHC.Types.Bool
    -> GHC.Base.String
    -> GHC.Base.String
    -> Text.Parsec.String.Parser (Defs.PName, Defs.PConstr)
  {- Arity: 8,
     Strictness: <L,U><L,U><L,U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.conflictsParser12
                  `cast`
                (<GHC.Types.Bool>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                               <GHC.Base.String>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <(Defs.PName, (GHC.Types.Bool, Defs.Version, Defs.Version))>_R)) -}
6ca72bd2e0c8827af8b7144b5d43a962
  singleVNumParser :: Text.Parsec.String.Parser Defs.VNum
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.boundParser7
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Defs.VNum>_R)) -}
a0f34b7800581f9a0dadbb7ee8ac0c24
  stringContentParser :: Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.stringContentParser1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Base.String>_R)) -}
4896c4ccfd362fc47faf2e268cc4e322
  stringContentParser1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Base.String
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U(U,U(U,U,U),U)><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,A>,
     Inline: [0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b1
                   (w :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (w1 :: GHC.Base.String
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w2 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w3 :: GHC.Base.String
                          -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1)
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b1) ->
                 ParserImpl.$wstringContentParser @ b1 w w1 w2 w3) -}
8bcb3ce03837f00852dbaf29090b9309
  stringParser :: Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.generalPackageNameParser1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Base.String>_R)) -}
2602b4599fb57781bae1de8eb7107903
  symbol ::
    GHC.Base.String -> Text.Parsec.String.Parser GHC.Base.String
  {- Arity: 6,
     Strictness: <S,1*U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.symbol1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                               <GHC.Base.String>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <GHC.Base.String>_R)) -}
14c87f831ba2a7ebe42d5b85f9c83dce
  symbol1 ::
    GHC.Base.String
    -> forall b.
       Text.Parsec.Prim.State GHC.Base.String ()
       -> (GHC.Base.String
           -> Text.Parsec.Prim.State GHC.Base.String ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (GHC.Base.String
           -> Text.Parsec.Prim.State GHC.Base.String ()
           -> Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> (Text.Parsec.Error.ParseError
           -> Data.Functor.Identity.Identity b)
       -> Data.Functor.Identity.Identity b
  {- Arity: 6,
     Strictness: <S,1*U><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (6, True, False)
                (\ (s :: GHC.Base.String)
                   @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta1 :: GHC.Base.String
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta3 :: GHC.Base.String
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 ParserImpl.boundParser25
                   @ GHC.Base.String
                   (Text.Parsec.Char.string1
                      @ GHC.Base.String
                      @ Data.Functor.Identity.Identity
                      @ ()
                      (ParserImpl.$s$fStream[]mtok @ GHC.Types.Char)
                      s)
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <[GHC.Types.Char]>_R))
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
6251b66cdce1dfb36f03ff3633c99584
  token :: Text.Parsec.String.Parser a -> Text.Parsec.String.Parser a
  {- Arity: 6,
     Strictness: <C(C(C(C(C(S))))),1*C1(C1(C1(C1(C1(U)))))><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.boundParser25
                  `cast`
                (forall (a :: <*>_N).
                 <Text.Parsec.String.Parser a>_R
                 ->_R Sym (Text.Parsec.Prim.N:ParsecT[0]
                               <[GHC.Types.Char]>_R
                               <()>_R
                               <Data.Functor.Identity.Identity>_R
                               <a>_R)) -}
e46ead242877d5d0e60c3b73f8fdb01b
  versionParser :: Text.Parsec.String.Parser Defs.Version
  {- Arity: 5,
     Unfolding: InlineRule (0, True, True)
                ParserImpl.boundParser2
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <Defs.Version>_R)) -}
"SPEC/ParserImpl $fStream[]mtok @ Identity _" [orphan] forall @ tok
                                                              (v :: GHC.Base.Monad
                                                                      Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok @ Data.Functor.Identity.Identity
                                  @ tok
                                  v
  = ParserImpl.$s$fStream[]mtok @ tok
"SPEC/ParserImpl $fStream[]mtok_$cuncons @ Identity _" [orphan] forall @ tok
                                                                       ($dMonad :: GHC.Base.Monad
                                                                                     Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cuncons @ Data.Functor.Identity.Identity
                                           @ tok
                                           $dMonad
  = ParserImpl.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

